x1 = x[[1]] %>% mutate(year = i)
x2 = x[[2]] %>% mutate(year = i)
allstars = bind_rows(allstars, x1, x2)
}
allstars = allstars %>% group_by(Team, year) %>% summarise(num_all_stars = n()) %>% mutate(Team = map_chr(Team, select_word))
#All of this is to deal with missing observations when we lag Ie: years without all stars for a team
blank_df <- expand.grid(Team = unique(allstars$Team), year = unique(allstars$year))
allstars <- merge(blank_df, allstars, by = c("Team", "year"), all.x = TRUE)
allstars$num_all_stars[is.na(allstars$num_all_stars)] <- 0
allstars = allstars %>% arrange(Team, year) %>% group_by(Team) %>% mutate(lagged = lag(num_all_stars),Team = case_when(Team=='Sixers'~'76ers',TRUE~Team))
write.csv(allstars,'allstars.csv',row.names=FALSE)
}
months=c('october','november','december','january','february','march','april')
y='2018'
game = data.frame()
for (m in months){
url = sprintf('https://www.basketball-reference.com/leagues/NBA_%s_games-%s.html',y,m)
urb =url
response <- GET(url)
html_content <- content(response)
x = data.frame(html_table(html_content))
x= x %>% select(Date,`Visitor.Neutral`,`Home.Neutral`)
game = bind_rows(game, x)
}
game2=game %>%
mutate(Date = as.Date(Date, format = '%a, %b %d, %Y')) %>%
filter(Date < as.Date('2018-04-14')) %>%
mutate(Visitor.Neutral=map_chr(Visitor.Neutral, select_word),
Home.Neutral = map_chr(Home.Neutral,select_word)) %>%
rename(Visitor=Visitor.Neutral, Home = Home.Neutral)
ranks =odds %>%
filter(year==2018) %>%
arrange(Odds) %>%
mutate(Team=map_chr(Team,select_word), rank = 1:n()) %>%
select(Team,rank)
game2 <- merge(game2, ranks, by.x = "Visitor", by.y = "Team", all.x = TRUE) %>% rename(Visitor_rank = rank)
game2 <- merge(game2, ranks, by.x = "Home", by.y = "Team", all.x = TRUE) %>% rename(Home_rank = rank)
teams=unique(ranks$Team)
most_uneven = list()
for (te in teams){
visiting_games = game2 %>% filter(Visitor == te)
tally <- sum(visiting_games$Visitor_rank < visiting_games$Home_rank)
home_games = game2 %>% filter(Home == te)
tally2 <- sum(home_games$Home_rank < home_games$Visitor_rank)
games_won = tally+tally2
most_uneven = c(most_uneven, games_won)
}
maximum_gini=Gini(unlist(most_uneven))
#maximum_gini = 0.3567143
winning_gini = wins %>% group_by(year) %>% summarise(winning_gini = Gini(WinPCT)) %>% mutate(adjusted_winning_gini=(winning_gini)/(maximum_gini))
preseason_gini = odds %>% group_by(year) %>% summarise(preseason_gini = Gini(Odds))
merged = left_join(wins, attendance, by = c('Team','year'))
merged = left_join(merged, allstars, by = c('Team','year'))%>%
filter(!is.na(WinPCT),!is.na(PCT),!is.na(lagged),year != 2021) %>%
rename(AttendancePCT = PCT)
merged = left_join(merged, odds, by =c('Team','year'))
merged = left_join(merged, winning_gini, by = c('year'))
merged = left_join(merged, preseason_gini, by = c('year'))
library(modelsummary)
library(estimatr)
reg1=lm_robust(AttendancePCT~Wins+Team+as.character(year),data=merged)
reg2=lm_robust(AttendancePCT~log(decimal_odds)+as.character(year)+Team,data=merged %>% filter(!is.na(Odds)))
cm =c('(Intercept)'='Constant', 'Wins' = 'Wins', 'year' = 'Year','odds_frac'='Log(Odds)')
ms = modelsummary(list(reg1,reg2),gof_omit = "AIC|BIC|RMSE",
output = 'kableExtra',
coef_map = cm) %>%
kable_styling(full_width= F,position='float_right') %>% add_header_above(c(" "=1,"Team & Year FE"=2)) %>% add_header_above(c('Table 1: Effects of Wins and Preseason Odds on Attendance %' = 3))
ms
library(modelsummary)
library(estimatr)
reg1=lm_robust(AttendancePCT~Wins+Team+as.character(year),data=merged)
reg2=lm_robust(AttendancePCT~log(decimal_odds)+as.character(year)+Team,data=merged %>% filter(!is.na(Odds)))
cm =c('(Intercept)'='Constant', 'Wins' = 'Wins', 'year' = 'Year','log(decimal_odds)'='Log(Odds)')
ms = modelsummary(list(reg1,reg2),gof_omit = "AIC|BIC|RMSE",
output = 'kableExtra',
coef_map = cm) %>%
kable_styling(full_width= F,position='float_right') %>% add_header_above(c(" "=1,"Team & Year FE"=2)) %>% add_header_above(c('Table 1: Effects of Wins and Preseason Odds on Attendance %' = 3))
ms
library(modelsummary)
library(estimatr)
reg1=lm_robust(AttendancePCT~Wins+Team+as.character(year),data=merged)
reg2=lm_robust(AttendancePCT~ln(decimal_odds)+as.character(year)+Team,data=merged %>% filter(!is.na(Odds)))
library(modelsummary)
library(estimatr)
reg1=lm_robust(AttendancePCT~Wins+Team+as.character(year),data=merged)
reg2=lm_robust(AttendancePCT~log(decimal_odds)+as.character(year)+Team,data=merged %>% filter(!is.na(Odds)))
cm =c('(Intercept)'='Constant', 'Wins' = 'Wins', 'year' = 'Year','log(decimal_odds)'='Log(Odds)')
ms = modelsummary(list(reg1,reg2),gof_omit = "AIC|BIC|RMSE",
output = 'kableExtra',
coef_map = cm) %>%
kable_styling(full_width= F,position='float_right') %>% add_header_above(c(" "=1,"Team & Year FE"=2)) %>% add_header_above(c('Table 1: Effects of Wins and Preseason Odds on Attendance %' = 3))
ms
library(modelsummary)
library(estimatr)
reg1=lm_robust(AttendancePCT~Wins+Team+as.character(year),data=merged)
reg2=lm_robust(AttendancePCT~decimal_odds+as.character(year)+Team,data=merged %>% filter(!is.na(Odds)))
cm =c('(Intercept)'='Constant', 'Wins' = 'Wins', 'year' = 'Year','log(decimal_odds)'='Log(Odds)')
ms = modelsummary(list(reg1,reg2),gof_omit = "AIC|BIC|RMSE",
output = 'kableExtra',
coef_map = cm) %>%
kable_styling(full_width= F,position='float_right') %>% add_header_above(c(" "=1,"Team & Year FE"=2)) %>% add_header_above(c('Table 1: Effects of Wins and Preseason Odds on Attendance %' = 3))
ms
library(modelsummary)
library(estimatr)
reg1=lm_robust(AttendancePCT~Wins+Team+as.character(year),data=merged)
reg2=lm_robust(AttendancePCT~decimal_odds+as.character(year)+Team,data=merged %>% filter(!is.na(Odds)))
cm =c('(Intercept)'='Constant', 'Wins' = 'Wins', 'year' = 'Year','decimal_odds'='Log(Odds)')
ms = modelsummary(list(reg1,reg2),gof_omit = "AIC|BIC|RMSE",
output = 'kableExtra',
coef_map = cm) %>%
kable_styling(full_width= F,position='float_right') %>% add_header_above(c(" "=1,"Team & Year FE"=2)) %>% add_header_above(c('Table 1: Effects of Wins and Preseason Odds on Attendance %' = 3))
ms
library(modelsummary)
library(estimatr)
reg1=lm_robust(AttendancePCT~Wins+Team+as.character(year),data=merged)
reg2=lm_robust(AttendancePCT~log(decimal_odds)+as.character(year)+Team,data=merged %>% filter(!is.na(Odds)))
cm =c('(Intercept)'='Constant', 'Wins' = 'Wins', 'year' = 'Year','log(decimal_odds)'='Log(Odds)')
ms = modelsummary(list(reg1,reg2),gof_omit = "AIC|BIC|RMSE",
output = 'kableExtra',
coef_map = cm) %>%
kable_styling(full_width= F,position='float_right') %>% add_header_above(c(" "=1,"Team & Year FE"=2)) %>% add_header_above(c('Table 1: Effects of Wins and Preseason Odds on Attendance %' = 3))
ms
library(modelsummary)
library(estimatr)
reg1=lm_robust(AttendancePCT~Wins+Team+as.character(year),data=merged)
reg2=lm_robust(AttendancePCT~Wins+log(decimal_odds)+as.character(year)+Team,data=merged %>% filter(!is.na(Odds)))
cm =c('(Intercept)'='Constant', 'Wins' = 'Wins', 'year' = 'Year','log(decimal_odds)'='Log(Odds)')
ms = modelsummary(list(reg1,reg2),gof_omit = "AIC|BIC|RMSE",
output = 'kableExtra',
coef_map = cm) %>%
kable_styling(full_width= F,position='float_right') %>% add_header_above(c(" "=1,"Team & Year FE"=2)) %>% add_header_above(c('Table 1: Effects of Wins and Preseason Odds on Attendance %' = 3))
ms
library(modelsummary)
library(estimatr)
reg1=lm_robust(AttendancePCT~Wins+Team+as.character(year),data=merged)
reg2=lm_robust(AttendancePCT~log(decimal_odds)+as.character(year)+Team,data=merged %>% filter(!is.na(Odds)))
cm =c('(Intercept)'='Constant', 'Wins' = 'Wins', 'year' = 'Year','log(decimal_odds)'='Log(Odds)')
ms = modelsummary(list(reg1,reg2),gof_omit = "AIC|BIC|RMSE",
output = 'kableExtra',
coef_map = cm) %>%
kable_styling(full_width= F,position='float_right') %>% add_header_above(c(" "=1,"Team & Year FE"=2)) %>% add_header_above(c('Table 1: Effects of Wins and Preseason Odds on Attendance %' = 3))
ms
View(merged)
2**4
library(modelsummary)
library(estimatr)
reg1=lm_robust(AttendancePCT~Wins+Team+as.character(year),data=merged)
reg2=lm_robust(AttendancePCT~decimal_odds+decimal_odds**2+as.character(year)+Team,data=merged %>% filter(!is.na(Odds)))
cm =c('(Intercept)'='Constant', 'Wins' = 'Wins', 'year' = 'Year','log(decimal_odds)'='Log(Odds)')
ms = modelsummary(list(reg1,reg2),gof_omit = "AIC|BIC|RMSE",
output = 'kableExtra',
coef_map = cm) %>%
kable_styling(full_width= F,position='float_right') %>% add_header_above(c(" "=1,"Team & Year FE"=2)) %>% add_header_above(c('Table 1: Effects of Wins and Preseason Odds on Attendance %' = 3))
ms
library(modelsummary)
library(estimatr)
reg1=lm_robust(AttendancePCT~Wins+Team+as.character(year),data=merged)
reg2=lm_robust(AttendancePCT~decimal_odds+decimal_odds**2+as.character(year)+Team,data=merged %>% filter(!is.na(Odds)))
cm =c('(Intercept)'='Constant', 'Wins' = 'Wins', 'year' = 'Year','decimal_odds'='decimal_odds')
ms = modelsummary(list(reg1,reg2),gof_omit = "AIC|BIC|RMSE",
output = 'kableExtra',
coef_map = cm) %>%
kable_styling(full_width= F,position='float_right') %>% add_header_above(c(" "=1,"Team & Year FE"=2)) %>% add_header_above(c('Table 1: Effects of Wins and Preseason Odds on Attendance %' = 3))
ms
library(modelsummary)
library(estimatr)
reg1=lm_robust(AttendancePCT~Wins+Team+as.character(year),data=merged)
reg2=lm_robust(AttendancePCT~decimal_odds+decimal_odds**2+as.character(year)+Team,data=merged %>% filter(!is.na(Odds)))
#cm =c('(Intercept)'='Constant', 'Wins' = 'Wins', 'year' = 'Year','decimal_odds'='decimal_odds')
ms = modelsummary(list(reg1,reg2),gof_omit = "AIC|BIC|RMSE",
output = 'kableExtra') %>%
#,
#           coef_map = cm) %>%
kable_styling(full_width= F,position='float_right') %>% add_header_above(c(" "=1,"Team & Year FE"=2)) %>% add_header_above(c('Table 1: Effects of Wins and Preseason Odds on Attendance %' = 3))
ms
library(modelsummary)
library(estimatr)
reg1=lm_robust(AttendancePCT~Wins+Team+as.character(year),data=merged)
reg2=lm_robust(AttendancePCT~decimal_odds+decimal_odds**2+as.character(year)+Team,data=merged %>% filter(!is.na(Odds)))
cm =c('(Intercept)'='Constant', 'Wins' = 'Wins', 'year' = 'Year','decimal_odds'='decimal_odds')
ms = modelsummary(list(reg1,reg2),gof_omit = "AIC|BIC|RMSE",
output = 'kableExtra',
coef_map = cm) %>%
kable_styling(full_width= F,position='float_right') %>% add_header_above(c(" "=1,"Team & Year FE"=2)) %>% add_header_above(c('Table 1: Effects of Wins and Preseason Odds on Attendance %' = 3))
ms
library(modelsummary)
library(estimatr)
reg1=lm_robust(AttendancePCT~Wins+Team+as.character(year),data=merged)
reg2=lm_robust(AttendancePCT~decimal_odds+as.character(year)+Team,data=merged %>% filter(!is.na(Odds)))
cm =c('(Intercept)'='Constant', 'Wins' = 'Wins', 'year' = 'Year','decimal_odds'='decimal_odds')
ms = modelsummary(list(reg1,reg2),gof_omit = "AIC|BIC|RMSE",
output = 'kableExtra',
coef_map = cm) %>%
kable_styling(full_width= F,position='float_right') %>% add_header_above(c(" "=1,"Team & Year FE"=2)) %>% add_header_above(c('Table 1: Effects of Wins and Preseason Odds on Attendance %' = 3))
ms
merged$square_decimal = merged$decimal_odds**2
library(modelsummary)
library(estimatr)
merged$square_decimal = merged$decimal_odds**2
reg1=lm_robust(AttendancePCT~Wins+Team+as.character(year),data=merged)
reg2=lm_robust(AttendancePCT~decimal_odds+square_decimal+as.character(year)+Team,data=merged %>% filter(!is.na(Odds)))
cm =c('(Intercept)'='Constant', 'Wins' = 'Wins', 'year' = 'Year','decimal_odds'='decimal_odds')
ms = modelsummary(list(reg1,reg2),gof_omit = "AIC|BIC|RMSE",
output = 'kableExtra',
coef_map = cm) %>%
kable_styling(full_width= F,position='float_right') %>% add_header_above(c(" "=1,"Team & Year FE"=2)) %>% add_header_above(c('Table 1: Effects of Wins and Preseason Odds on Attendance %' = 3))
ms
library(modelsummary)
library(estimatr)
merged$square_decimal = merged$decimal_odds**2
reg1=lm_robust(AttendancePCT~Wins+Team+as.character(year),data=merged)
reg2=lm_robust(AttendancePCT~decimal_odds+square_decimal+as.character(year)+Team,data=merged %>% filter(!is.na(Odds)))
cm =c('(Intercept)'='Constant', 'Wins' = 'Wins', 'year' = 'Year','decimal_odds'='decimal_odds','square_decimal'='square_decimal')
ms = modelsummary(list(reg1,reg2),gof_omit = "AIC|BIC|RMSE",
output = 'kableExtra',
coef_map = cm) %>%
kable_styling(full_width= F,position='float_right') %>% add_header_above(c(" "=1,"Team & Year FE"=2)) %>% add_header_above(c('Table 1: Effects of Wins and Preseason Odds on Attendance %' = 3))
ms
library(modelsummary)
library(estimatr)
merged$square_decimal = merged$decimal_odds**2
reg1=lm_robust(AttendancePCT~Wins+Team+as.character(year),data=merged)
reg2=lm_robust(AttendancePCT~decimal_odds+as.character(year)+Team,data=merged %>% filter(!is.na(Odds)))
cm =c('(Intercept)'='Constant', 'Wins' = 'Wins', 'year' = 'Year','decimal_odds'='decimal_odds','square_decimal'='square_decimal')
ms = modelsummary(list(reg1,reg2),gof_omit = "AIC|BIC|RMSE",
output = 'kableExtra',
coef_map = cm) %>%
kable_styling(full_width= F,position='float_right') %>% add_header_above(c(" "=1,"Team & Year FE"=2)) %>% add_header_above(c('Table 1: Effects of Wins and Preseason Odds on Attendance %' = 3))
ms
library(modelsummary)
library(estimatr)
merged$square_decimal = merged$decimal_odds**2
reg1=lm_robust(AttendancePCT~Wins+Team+as.character(year),data=merged)
reg2=lm_robust(AttendancePCT~decimal_odds+square_decimal+as.character(year)+Team,data=merged %>% filter(!is.na(Odds)))
cm =c('(Intercept)'='Constant', 'Wins' = 'Wins', 'year' = 'Year','decimal_odds'='decimal_odds','square_decimal'='square_decimal')
ms = modelsummary(list(reg1,reg2),gof_omit = "AIC|BIC|RMSE",
output = 'kableExtra',
coef_map = cm) %>%
kable_styling(full_width= F,position='float_right') %>% add_header_above(c(" "=1,"Team & Year FE"=2)) %>% add_header_above(c('Table 1: Effects of Wins and Preseason Odds on Attendance %' = 3))
ms
View(merged)
library(modelsummary)
library(estimatr)
merged$square_decimal = merged$decimal_odds**2
reg1=lm_robust(AttendancePCT~Wins+Team+as.character(year),data=merged)
reg2=lm_robust(AttendancePCT~decimal_odds+as.character(year)+Team,data=merged %>% filter(!is.na(Odds)))
cm =c('(Intercept)'='Constant', 'Wins' = 'Wins', 'year' = 'Year','decimal_odds'='decimal_odds','square_decimal'='square_decimal')
ms = modelsummary(list(reg1,reg2),gof_omit = "AIC|BIC|RMSE",
output = 'kableExtra',
coef_map = cm) %>%
kable_styling(full_width= F,position='float_right') %>% add_header_above(c(" "=1,"Team & Year FE"=2)) %>% add_header_above(c('Table 1: Effects of Wins and Preseason Odds on Attendance %' = 3))
ms
merged$adjusted_odds = ifelse(merged$Odds > 0,
merged$Odds,
100*(100/abs(merged$Odds)))
library(modelsummary)
library(estimatr)
merged$square_decimal = merged$decimal_odds**2
merged$adjusted_odds = ifelse(merged$Odds > 0,
merged$Odds,
100*(100/abs(merged$Odds)))
reg1=lm_robust(AttendancePCT~Wins+Team+as.character(year),data=merged)
reg2=lm_robust(AttendancePCT~adjusted_odds+as.character(year)+Team,data=merged %>% filter(!is.na(Odds)))
cm =c('(Intercept)'='Constant', 'Wins' = 'Wins', 'year' = 'Year','decimal_odds'='decimal_odds','square_decimal'='square_decimal','adjusted_odds'='adjusted_odds')
ms = modelsummary(list(reg1,reg2),gof_omit = "AIC|BIC|RMSE",
output = 'kableExtra',
coef_map = cm) %>%
kable_styling(full_width= F,position='float_right') %>% add_header_above(c(" "=1,"Team & Year FE"=2)) %>% add_header_above(c('Table 1: Effects of Wins and Preseason Odds on Attendance %' = 3))
ms
View(merged)
library(modelsummary)
library(estimatr)
merged$square_decimal = merged$decimal_odds**2
merged$adjusted_odds = ifelse(merged$Odds > 0,
merged$Odds,
100*(100/abs(merged$Odds)))
reg1=lm_robust(AttendancePCT~Wins+Team+as.character(year),data=merged)
reg2=lm_robust(AttendancePCT~log(adjusted_odds)+as.character(year)+Team,data=merged %>% filter(!is.na(Odds)))
cm =c('(Intercept)'='Constant', 'Wins' = 'Wins', 'year' = 'Year','decimal_odds'='decimal_odds','square_decimal'='square_decimal','log(adjusted_odds)'='adjusted_odds')
ms = modelsummary(list(reg1,reg2),gof_omit = "AIC|BIC|RMSE",
output = 'kableExtra',
coef_map = cm) %>%
kable_styling(full_width= F,position='float_right') %>% add_header_above(c(" "=1,"Team & Year FE"=2)) %>% add_header_above(c('Table 1: Effects of Wins and Preseason Odds on Attendance %' = 3))
ms
convert_decimal_odds = function(x){
decimal_odds = ifelse(x>0,
1 + (x/100),
1 + (100/abs(x)))
return(decimal_odds)
}
if (file.exists('odds.csv')){
odds=read.csv('odds.csv')
} else {
odds = data.frame()
for (i in years){
url = sprintf('https://www.basketball-reference.com/leagues/NBA_%s_preseason_odds.html', i)
response <- GET(url)
html_content <- content(response)
t = html_table(html_content)[[1]]
names = html_content %>% html_element('table thead') %>% html_elements('th') %>% html_text()
colnames(t) = names
t = t[,-3] %>% mutate(year = i)
odds = bind_rows(odds,t)
}
odds = odds %>% mutate(Team = map_chr(Team, select_word), Odds = ifelse(Odds > 0,
Odds,
100*(100/abs(Odds))))
write.csv(odds,'odds.csv',row.names=FALSE)
}
View(odds)
if (file.exists('wins.csv')){
wins=read.csv('wins.csv')
} else {
wins = data.frame()
for (i in years){
url = sprintf('https://www.teamrankings.com/nba/trend/win_trends/is_away?sc=is_home&range=yearly_%s_%s',i,i+1)
response = GET(url)
html_content = content(response)
t = html_table(html_content)[[1]]
t = t %>% mutate(year = i)
wins = bind_rows(wins, t)
}
wins = wins %>%
mutate(WinPCT = as.numeric(str_replace_all(wins$`Win %`,"%","")),
Wins = map_chr(`Win-Loss Record`, select_wins)) %>%
dplyr::select(Team, year, WinPCT,Wins)
wins = wins %>%
mutate(Team = case_when(
Team == "Dallas" ~ "Mavericks",
Team == "LA Lakers" ~ "Lakers",
Team == "Sacramento" ~ "Kings",
Team == "Indiana" ~ "Pacers",
Team == "San Antonio" ~ "Spurs",
Team == "Minnesota" ~ "Timberwolves",
Team == "Detroit" ~ "Pistons",
Team == "Miami" ~ "Heat",
Team == "Memphis" ~ "Grizzlies",
Team == "Denver" ~ "Nuggets",
Team == "Brooklyn" ~ "Nets",
Team == "Utah" ~ "Jazz",
Team == "Golden State" ~ "Warriors",
Team == "Houston" ~ "Rockets",
Team == "New Orleans" ~ "Pelicans",
Team == "Milwaukee" ~ "Bucks",
Team == "Portland" ~ "Blazers",
Team == "Cleveland" ~ "Cavaliers",
Team == "New York" ~ "Knicks",
Team == "Philadelphia" ~ "76ers",
Team == "Okla City" ~ "Thunder",
Team == "LA Clippers" ~ "Clippers",
Team == "Boston" ~ "Celtics",
Team == "Toronto" ~ "Raptors",
Team == "Atlanta" ~ "Hawks",
Team == "Phoenix" ~ "Suns",
Team == "Washington" ~ "Wizards",
Team == "Chicago" ~ "Bulls",
Team == "Orlando" ~ "Magic",
Team == "Charlotte" ~ "Hornets",
TRUE ~ NA_character_  # Handle other cases if needed
))
write.csv(wins,'wins.csv',row.names=FALSE)
}
if (file.exists('allstars.csv')){
allstars=read.csv('allstars.csv')
} else {
allstars = data.frame()
for (i in years){
url = sprintf('https://basketball.realgm.com/nba/allstar/game/rosters/%s',i)
response <- GET(url)
html_content <- content(response)
x = html_nodes(html_content, 'table.basketball')
x = html_table(x)
x1 = x[[1]] %>% mutate(year = i)
x2 = x[[2]] %>% mutate(year = i)
allstars = bind_rows(allstars, x1, x2)
}
allstars = allstars %>% group_by(Team, year) %>% summarise(num_all_stars = n()) %>% mutate(Team = map_chr(Team, select_word))
#All of this is to deal with missing observations when we lag Ie: years without all stars for a team
blank_df <- expand.grid(Team = unique(allstars$Team), year = unique(allstars$year))
allstars <- merge(blank_df, allstars, by = c("Team", "year"), all.x = TRUE)
allstars$num_all_stars[is.na(allstars$num_all_stars)] <- 0
allstars = allstars %>% arrange(Team, year) %>% group_by(Team) %>% mutate(lagged = lag(num_all_stars),Team = case_when(Team=='Sixers'~'76ers',TRUE~Team))
write.csv(allstars,'allstars.csv',row.names=FALSE)
}
months=c('october','november','december','january','february','march','april')
y='2018'
game = data.frame()
for (m in months){
url = sprintf('https://www.basketball-reference.com/leagues/NBA_%s_games-%s.html',y,m)
urb =url
response <- GET(url)
html_content <- content(response)
x = data.frame(html_table(html_content))
x= x %>% select(Date,`Visitor.Neutral`,`Home.Neutral`)
game = bind_rows(game, x)
}
game2=game %>%
mutate(Date = as.Date(Date, format = '%a, %b %d, %Y')) %>%
filter(Date < as.Date('2018-04-14')) %>%
mutate(Visitor.Neutral=map_chr(Visitor.Neutral, select_word),
Home.Neutral = map_chr(Home.Neutral,select_word)) %>%
rename(Visitor=Visitor.Neutral, Home = Home.Neutral)
ranks =odds %>%
filter(year==2018) %>%
arrange(Odds) %>%
mutate(Team=map_chr(Team,select_word), rank = 1:n()) %>%
select(Team,rank)
game2 <- merge(game2, ranks, by.x = "Visitor", by.y = "Team", all.x = TRUE) %>% rename(Visitor_rank = rank)
game2 <- merge(game2, ranks, by.x = "Home", by.y = "Team", all.x = TRUE) %>% rename(Home_rank = rank)
teams=unique(ranks$Team)
most_uneven = list()
for (te in teams){
visiting_games = game2 %>% filter(Visitor == te)
tally <- sum(visiting_games$Visitor_rank < visiting_games$Home_rank)
home_games = game2 %>% filter(Home == te)
tally2 <- sum(home_games$Home_rank < home_games$Visitor_rank)
games_won = tally+tally2
most_uneven = c(most_uneven, games_won)
}
maximum_gini=Gini(unlist(most_uneven))
#maximum_gini = 0.3567143
winning_gini = wins %>% group_by(year) %>% summarise(winning_gini = Gini(WinPCT)) %>% mutate(adjusted_winning_gini=(winning_gini)/(maximum_gini))
preseason_gini = odds %>% group_by(year) %>% summarise(preseason_gini = Gini(Odds))
merged = left_join(wins, attendance, by = c('Team','year'))
merged = left_join(merged, allstars, by = c('Team','year'))%>%
filter(!is.na(WinPCT),!is.na(PCT),!is.na(lagged),year != 2021) %>%
rename(AttendancePCT = PCT)
merged = left_join(merged, odds, by =c('Team','year'))
merged = left_join(merged, winning_gini, by = c('year'))
merged = left_join(merged, preseason_gini, by = c('year'))
reg1=lm_robust(AttendancePCT~Wins+Team+as.character(year),data=merged)
reg2=lm_robust(AttendancePCT~log(Odds)+as.character(year)+Team,data=merged %>% filter(!is.na(Odds)))
cm =c('(Intercept)'='Constant', 'Wins' = 'Wins', 'year' = 'Year','decimal_odds'='decimal_odds','square_decimal'='square_decimal','log(adjusted_odds)'='adjusted_odds')
ms = modelsummary(list(reg1,reg2),gof_omit = "AIC|BIC|RMSE",
output = 'kableExtra',
coef_map = cm) %>%
kable_styling(full_width= F,position='float_right') %>% add_header_above(c(" "=1,"Team & Year FE"=2)) %>% add_header_above(c('Table 1: Effects of Wins and Preseason Odds on Attendance %' = 3))
ms
reg1=lm_robust(AttendancePCT~Wins+Team+as.character(year),data=merged)
reg2=lm_robust(AttendancePCT~log(Odds)+as.character(year)+Team,data=merged %>% filter(!is.na(Odds)))
cm =c('(Intercept)'='Constant', 'Wins' = 'Wins', 'year' = 'Year','log(Odds)'='log(Odds)')
ms = modelsummary(list(reg1,reg2),gof_omit = "AIC|BIC|RMSE",
output = 'kableExtra',
coef_map = cm) %>%
kable_styling(full_width= F,position='float_right') %>% add_header_above(c(" "=1,"Team & Year FE"=2)) %>% add_header_above(c('Table 1: Effects of Wins and Preseason Odds on Attendance %' = 3))
ms
reg1=lm_robust(AttendancePCT~Wins+Team+as.character(year)+num_all_stars,data=merged)
reg2=lm_robust(AttendancePCT~Wins+Team+as.character(year)+num_all_stars+lagged,data=merged)
reg3=lm_robust(AttendancePCT~odds_frac+as.character(year)+Team+num_all_stars,data=merged %>% filter(!is.na(Odds)))
reg1=lm_robust(AttendancePCT~Wins+Team+as.character(year)+num_all_stars,data=merged)
reg2=lm_robust(AttendancePCT~Wins+Team+as.character(year)+num_all_stars+lagged,data=merged)
reg3=lm_robust(AttendancePCT~log(Odds)+as.character(year)+Team+num_all_stars,data=merged %>% filter(!is.na(Odds)))
reg4=lm_robust(AttendancePCT~log(Odds)+as.character(year)+Team+num_all_stars+lagged,data=merged %>% filter(!is.na(Odds)))
cm =c('(Intercept)'='Constant', 'Wins' = 'Wins','log(Odds)'='Log(Odds)', 'year' = 'Year','num_all_stars'='# of Allstars','lagged'='Lagged # of Allstars')
ms = modelsummary(list(reg1,reg2,reg3,reg4),gof_omit = "AIC|BIC|RMSE",
output = 'kableExtra',
coef_map=cm) %>%
kable_styling(full_width=F, position = 'float_right') %>% add_header_above(c(' '=1,'Winning %'=2,"Preseason Odds"=2))%>% add_header_above(c('Table 2: Effects of adding allstar on Attendance %'=5))
ms
gini=merged %>% group_by(year) %>% summarise(gini=Gini(Wins))
fig=gini %>%
ggplot(aes(x=year,y=gini))+
geom_line(linewidth=2)+
expand_limits(y=0)+
scale_x_continuous(breaks = seq(min(yearly_attendance$year), max(yearly_attendance$year), by = 2))+
geom_hline(yintercept = maximum_gini, color='red',size=2)+
labs(title="Figure 4: Leaguewide Winning Gini by Year", y='Gini')+
theme_fivethirtyeight()+
theme(plot.title = element_text(hjust = 0.5, size = 14))+
theme(axis.title.y = element_text(margin = margin(r = 10)))
yearly_attendance = attendance %>% filter(!is.na(PCT)) %>% group_by(year) %>% summarise(average_attendance = mean(PCT))
fig1=yearly_attendance %>%
ggplot(aes(x=year,y=average_attendance,label=year))+
geom_line(linewidth=2)+
labs(title="Figure 1: Leaguewide Average Stadium Capacity Utilization (%)", y = "Leaguewide Attendance %")+
theme_fivethirtyeight()+
theme(plot.title = element_text(hjust = 0.5, size = 14))+
theme(axis.title.y = element_text(margin = margin(r = 10)))
fig1
gini=merged %>% group_by(year) %>% summarise(gini=Gini(Wins))
fig=gini %>%
ggplot(aes(x=year,y=gini))+
geom_line(linewidth=2)+
expand_limits(y=0)+
scale_x_continuous(breaks = seq(min(yearly_attendance$year), max(yearly_attendance$year), by = 2))+
geom_hline(yintercept = maximum_gini, color='red',size=2)+
labs(title="Figure 4: Leaguewide Winning Gini by Year", y='Gini')+
theme_fivethirtyeight()+
theme(plot.title = element_text(hjust = 0.5, size = 14))+
theme(axis.title.y = element_text(margin = margin(r = 10)))
fig
attend_trend = merged %>% group_by(year) %>% summarise(AttendancePCT=mean(AttendancePCT),preseason_gini=mean(preseason_gini), win_gini = mean(winning_gini))
reg10=lm_robust(AttendancePCT~year+preseason_gini,data=attend_trend)
reg11=lm_robust(AttendancePCT~year+win_gini,data=attend_trend)
cm =c('year'='Year', 'preseason_gini' = 'Preseason Gini','win_gini'='Winning Gini')
ms = modelsummary(list(reg10,reg11),gof_omit = "AIC|BIC|RMSE",
output = 'kableExtra',
coef_map = cm) %>%
kable_styling(full_width=F, position = 'float_right') %>% add_header_above(c('Table 3: Predictive power of Gini on attendance by year'=3))
ms
preds = predict(reg10, attend_trend)
preds = data.frame(val = preds, label = rep('Predicted',length(preds)), xx = unique(attend_trend$year))
actual = attend_trend$AttendancePCT
actual = data.frame(val = actual, label = rep('Actual',length(actual)), xx = unique(attend_trend$year))
vals = bind_rows(preds, actual)
plt = vals %>% ggplot(aes(x=xx,y = val,color=label))+
geom_line(size=2)+labs(y='Attendance %',x='Year')+
labs(color=NULL,title='Figure 5: Predictive Power of Preseason Gini',y='Attendance %')+
theme_fivethirtyeight()+theme(
axis.title.y = element_text(margin = margin(r = 10))
)
plt
